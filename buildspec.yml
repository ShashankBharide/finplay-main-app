version: 0.2
env:
  variables:
    # ECS Configuration
    ECS_CLUSTER: "finplay-cluster"
    ECS_SERVICE: "finplay-backend-service"
    ECS_TASK_DEFINITION: "finplay-backend"
    # ECR Configuration
    ECR_REGISTRY: "061039764011.dkr.ecr.us-east-1.amazonaws.com"
    ECR_REPOSITORY: "finplay-main-app"
    ECR_FLASK_REPOSITORY: "finplay-data-ingest"
    # Application Database Configuration
    DB_URL: "jdbc:mysql://finplaydb-instance-1.c7a0imowi95o.us-east-1.rds.amazonaws.com:3306/finplaydb"
    DB_USERNAME: "finplay"
    COGNITO_USER_POOL_ID: "us-east-1_e4yKbIDkl"
    AWS_REGION: "us-east-1"
    JWT_URI: "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_e4yKbIDkl/.well-known/jwks.json"
  secrets-manager:
    # Secure way to manage sensitive credentials
    DB_PASSWORD: "arn:aws:secretsmanager:us-east-1:061039764011:secret:finplay-secrets-M9rANM:database-password"
    AWS_ACCESS_KEY_ID: "arn:aws:secretsmanager:us-east-1:061039764011:secret:finplay-secrets-M9rANM:aws-access-key"
    AWS_SECRET_ACCESS_KEY: "arn:aws:secretsmanager:us-east-1:061039764011:secret:finplay-secrets-M9rANM:aws-secret-key"
    COGNITO_CLIENT_ID: "arn:aws:secretsmanager:us-east-1:061039764011:secret:finplay-secrets-M9rANM:client-id"
    COGNITO_CLIENT_SECRET: "arn:aws:secretsmanager:us-east-1:061039764011:secret:finplay-secrets-M9rANM:client-secret"
phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - yum install -y jq
  pre_build:
    commands:
      - echo Preparing for build
      - mvn clean validate
  build:
    commands:
      - echo Building the application
      - |
        mvn package -DskipTests \
          -DDB_URL="$DB_URL" \
          -DDB_USERNAME="$DB_USERNAME" \
          -DDB_PASSWORD="$DB_PASSWORD" \
          -DAWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
          -DAWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
          -DAWS_REGION="$AWS_REGION" \
          -DCOGNITO_CLIENT_ID="$COGNITO_CLIENT_ID" \
          -DCOGNITO_CLIENT_SECRET="$COGNITO_CLIENT_SECRET" \
          -DCOGNITO_USER_POOL_ID="$COGNITO_USER_POOL_ID" \
          -DJWT_URI="$JWT_URI"
      - echo Building the Docker image
      - docker build -t $ECR_REPOSITORY:latest .
      - docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
  post_build:
    commands:
      - echo Build completed
      - echo Pushing image to ECR...
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - echo "Writing image definitions file..."
      - |
        cat << EOF > imageDefinitions.json
          [
            {
              "name": "finplay-spring-container",
              "imageUri": "$ECR_REGISTRY/$ECR_REPOSITORY:latest",
              "environment": [
                {"name": "DB_URL", "value": "$DB_URL"},
                {"name": "DB_USERNAME", "value": "$DB_USERNAME"},
                {"name": "COGNITO_USER_POOL_ID", "value": "$COGNITO_USER_POOL_ID"},
                {"name": "AWS_REGION", "value": "$AWS_REGION"},
                {"name": "JWT_URI", "value": "$JWT_URI"},
                {"name": "DB_PASSWORD", "value": "$DB_PASSWORD"},
                {"name": "AWS_ACCESS_KEY_ID", "value": "$AWS_ACCESS_KEY_ID"},
                {"name": "AWS_SECRET_ACCESS_KEY", "value": "$AWS_SECRET_ACCESS_KEY"},
                {"name": "COGNITO_CLIENT_ID", "value": "$COGNITO_CLIENT_ID"},
                {"name": "COGNITO_CLIENT_SECRET", "value": "$COGNITO_CLIENT_SECRET"}
              ]
            },
            {
              "name": "finplay-flask-container",
              "imageUri": "$ECR_REGISTRY/$ECR_FLASK_REPOSITORY:latest"
            }
          ]
        EOF
      - cat imageDefinitions.json
      - echo "Post-build phase completed"
artifacts:
  files:
    - imageDefinitions.json
